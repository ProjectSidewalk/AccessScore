# This Dockerfile is based on:
#  1. https://docs.docker.com/compose/django/ (official Docker Django quickstart guide)
#
# To build this Dockerfile:
#   > docker build -t jonfroehlich/makelab_image .
# To run the image:
#   > docker run -p 8000:8000 jonfroehlich/makelab_image:latest
# To stop the server, try ctrl-C in terminal, otherwise:
#   > docker stop $(docker ps -aq) //this will stop all running containers

# All Dockerfiles must start with a 'FROM' instruction, which specifies a base image
# See: https://docs.docker.com/engine/reference/builder/#format
# Note, some online sources say that you should put FROM django here (e.g., https://runnable.com/docker/python/dockerize-your-django-application)
# but, in fact, you should NOT do this according to the official docs (as this approach has been deprecated). 
# See: https://hub.docker.com/_/django/
FROM python:3

# The ENV instruction sets the environment variable <key> to the <value> in ENV <key> <value>. 
# See: https://docs.docker.com/engine/reference/builder/#environment-replacement
# In this case, we are setting the stdout/stderr streams in Python to be unbuffered
ENV PYTHONUNBUFFERED 1

# The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. 
# The resulting committed image will be used for the next step in the Dockerfile.
# See: https://docs.docker.com/engine/reference/builder/#run
RUN mkdir /code

# The WORKDIR instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions 
# that follow it in the Dockerfile. If the WORKDIR doesn’t exist, it will be created even if it’s not used 
# in any subsequent Dockerfile instruction. 
# See: https://docs.docker.com/engine/reference/builder/#workdir
WORKDIR /code

#COPY the requirements.txt into the docker container

# As an fyi: Layering RUN instructions and generating commits conforms to the core concepts 
# of Docker where commits are cheap and containers can be created from any point in an image’s history, much like source control.
# See: https://docs.docker.com/engine/reference/builder/#run
COPY requirements.txt /code/
RUN pip install -r requirements.txt

COPY . /code/

EXPOSE 8000

COPY docker-entrypoint.sh docker-entrypoint.sh
CMD ["/code/docker-entrypoint.sh"] 